# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/copter
pkgincludedir = $(includedir)/copter
pkglibdir = $(libdir)/copter
pkglibexecdir = $(libexecdir)/copter
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src
DIST_COMMON = $(copterinc_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_pkg_swig.m4 \
	$(top_srcdir)/m4/ax_cc_maxopt.m4 \
	$(top_srcdir)/m4/ax_check_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/swig_enable_cxx.m4 \
	$(top_srcdir)/m4/swig_python.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(copterincdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcopter_la_LIBADD =
am_libcopter_la_OBJECTS = libcopter_la-Closure.lo \
	libcopter_la-Common.lo libcopter_la-ConsistentSPT.lo \
	libcopter_la-CorrelationFunction.lo libcopter_la-Cosmology.lo \
	libcopter_la-Datafile.lo libcopter_la-FlowingWithTime.lo \
	libcopter_la-GrowthFunction.lo libcopter_la-HigherSPT.lo \
	libcopter_la-InterpolatedPS.lo libcopter_la-Kaiser.lo \
	libcopter_la-LagrangianResummation.lo libcopter_la-LargeN.lo \
	libcopter_la-LinearPS.lo libcopter_la-MonteCarlo.lo \
	libcopter_la-NoWigglePS.lo libcopter_la-PowerSpectrum.lo \
	libcopter_la-Quadrature.lo libcopter_la-RPT.lo \
	libcopter_la-SPT.lo libcopter_la-SimpleRG.lo \
	libcopter_la-SpecialFunctions.lo libcopter_la-Spline.lo \
	libcopter_la-Timer.lo libcopter_la-array.lo \
	libcopter_la-cfg.lo libcopter_la-pstring.lo \
	libcopter_la-rng.lo
libcopter_la_OBJECTS = $(am_libcopter_la_OBJECTS)
libcopter_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libcopter_la_CXXFLAGS) \
	$(CXXFLAGS) $(libcopter_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcopter_la_SOURCES)
DIST_SOURCES = $(libcopter_la_SOURCES)
HEADERS = $(copterinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run aclocal-1.11
AMTAR = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run autoconf
AUTOHEADER = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run autoheader
AUTOMAKE = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -fomit-frame-pointer -mtune=native -fstrict-aliasing -fno-schedule-insns
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -fomit-frame-pointer -mtune=native -fstrict-aliasing -fno-schedule-insns
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lfftw3 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
PACKAGE = copter
PACKAGE_BUGREPORT = jwgcarlson AT berkeley.edu
PACKAGE_NAME = Copter
PACKAGE_STRING = Copter 0.8.7
PACKAGE_TARNAME = copter
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.7
PATH_SEPARATOR = :
POW_LIB = 
PYCOPTER_PY = 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = 
SWIG_LIB = 
SWIG_PYTHON_CPPFLAGS = 
SWIG_PYTHON_OPT = 
VERSION = 0.8.7
_PYCOPTER_LA = 
abs_builddir = /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/src
abs_srcdir = /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/src
abs_top_builddir = /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7
abs_top_srcdir = /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /remote/pi213c/casas/EFTCAMB/cosmomathica-tests/cosmomathica/ext/copter-0.8.7
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = 
lib_LTLIBRARIES = libcopter.la
libcopter_la_CPPFLAGS = -DDATADIR='"$(datadir)/Copter"'
libcopter_la_CXXFLAGS = $(OPENMP_CFLAGS)
libcopter_la_LDFLAGS = $(OPENMP_CFLAGS)
libcopter_la_SOURCES = \
    Closure.cpp Common.cpp ConsistentSPT.cpp CorrelationFunction.cpp \
    Cosmology.cpp Datafile.cpp FlowingWithTime.cpp GrowthFunction.cpp \
    HigherSPT.cpp InterpolatedPS.cpp Kaiser.cpp \
    LagrangianResummation.cpp LargeN.cpp \
    LinearPS.cpp MonteCarlo.cpp NoWigglePS.cpp PowerSpectrum.cpp \
    Quadrature.cpp RPT.cpp SPT.cpp SimpleRG.cpp SpecialFunctions.cpp \
    Spline.cpp Timer.cpp \
    array.cpp cfg.c pstring.cpp rng.c

copterincdir = $(includedir)/Copter
copterinc_HEADERS = \
    Closure.h Common.h ConsistentSPT.h CorrelationFunction.h \
    Cosmology.h Datafile.h FlowingWithTime.h GrowthFunction.h \
    HigherSPT.h InterpolatedPS.h Kaiser.h \
    LagrangianResummation.h LargeN.h \
    LinearPS.h MonteCarlo.h NoWigglePS.h ODE.h ODE.inl PowerSpectrum.h \
    Quadrature.h Quadrature.inl RPT.h SPT.h SimpleRG.h SpecialFunctions.h \
    Spline.h Timer.h \
    array.h cfg.h pstring.h rng.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcopter.la: $(libcopter_la_OBJECTS) $(libcopter_la_DEPENDENCIES) 
	$(libcopter_la_LINK) -rpath $(libdir) $(libcopter_la_OBJECTS) $(libcopter_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcopter_la-Closure.Plo
include ./$(DEPDIR)/libcopter_la-Common.Plo
include ./$(DEPDIR)/libcopter_la-ConsistentSPT.Plo
include ./$(DEPDIR)/libcopter_la-CorrelationFunction.Plo
include ./$(DEPDIR)/libcopter_la-Cosmology.Plo
include ./$(DEPDIR)/libcopter_la-Datafile.Plo
include ./$(DEPDIR)/libcopter_la-FlowingWithTime.Plo
include ./$(DEPDIR)/libcopter_la-GrowthFunction.Plo
include ./$(DEPDIR)/libcopter_la-HigherSPT.Plo
include ./$(DEPDIR)/libcopter_la-InterpolatedPS.Plo
include ./$(DEPDIR)/libcopter_la-Kaiser.Plo
include ./$(DEPDIR)/libcopter_la-LagrangianResummation.Plo
include ./$(DEPDIR)/libcopter_la-LargeN.Plo
include ./$(DEPDIR)/libcopter_la-LinearPS.Plo
include ./$(DEPDIR)/libcopter_la-MonteCarlo.Plo
include ./$(DEPDIR)/libcopter_la-NoWigglePS.Plo
include ./$(DEPDIR)/libcopter_la-PowerSpectrum.Plo
include ./$(DEPDIR)/libcopter_la-Quadrature.Plo
include ./$(DEPDIR)/libcopter_la-RPT.Plo
include ./$(DEPDIR)/libcopter_la-SPT.Plo
include ./$(DEPDIR)/libcopter_la-SimpleRG.Plo
include ./$(DEPDIR)/libcopter_la-SpecialFunctions.Plo
include ./$(DEPDIR)/libcopter_la-Spline.Plo
include ./$(DEPDIR)/libcopter_la-Timer.Plo
include ./$(DEPDIR)/libcopter_la-array.Plo
include ./$(DEPDIR)/libcopter_la-cfg.Plo
include ./$(DEPDIR)/libcopter_la-pstring.Plo
include ./$(DEPDIR)/libcopter_la-rng.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libcopter_la-cfg.lo: cfg.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcopter_la-cfg.lo -MD -MP -MF $(DEPDIR)/libcopter_la-cfg.Tpo -c -o libcopter_la-cfg.lo `test -f 'cfg.c' || echo '$(srcdir)/'`cfg.c
	$(am__mv) $(DEPDIR)/libcopter_la-cfg.Tpo $(DEPDIR)/libcopter_la-cfg.Plo
#	source='cfg.c' object='libcopter_la-cfg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcopter_la-cfg.lo `test -f 'cfg.c' || echo '$(srcdir)/'`cfg.c

libcopter_la-rng.lo: rng.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcopter_la-rng.lo -MD -MP -MF $(DEPDIR)/libcopter_la-rng.Tpo -c -o libcopter_la-rng.lo `test -f 'rng.c' || echo '$(srcdir)/'`rng.c
	$(am__mv) $(DEPDIR)/libcopter_la-rng.Tpo $(DEPDIR)/libcopter_la-rng.Plo
#	source='rng.c' object='libcopter_la-rng.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcopter_la-rng.lo `test -f 'rng.c' || echo '$(srcdir)/'`rng.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libcopter_la-Closure.lo: Closure.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Closure.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Closure.Tpo -c -o libcopter_la-Closure.lo `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Closure.Tpo $(DEPDIR)/libcopter_la-Closure.Plo
#	source='Closure.cpp' object='libcopter_la-Closure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Closure.lo `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp

libcopter_la-Common.lo: Common.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Common.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Common.Tpo -c -o libcopter_la-Common.lo `test -f 'Common.cpp' || echo '$(srcdir)/'`Common.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Common.Tpo $(DEPDIR)/libcopter_la-Common.Plo
#	source='Common.cpp' object='libcopter_la-Common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Common.lo `test -f 'Common.cpp' || echo '$(srcdir)/'`Common.cpp

libcopter_la-ConsistentSPT.lo: ConsistentSPT.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-ConsistentSPT.lo -MD -MP -MF $(DEPDIR)/libcopter_la-ConsistentSPT.Tpo -c -o libcopter_la-ConsistentSPT.lo `test -f 'ConsistentSPT.cpp' || echo '$(srcdir)/'`ConsistentSPT.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-ConsistentSPT.Tpo $(DEPDIR)/libcopter_la-ConsistentSPT.Plo
#	source='ConsistentSPT.cpp' object='libcopter_la-ConsistentSPT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-ConsistentSPT.lo `test -f 'ConsistentSPT.cpp' || echo '$(srcdir)/'`ConsistentSPT.cpp

libcopter_la-CorrelationFunction.lo: CorrelationFunction.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-CorrelationFunction.lo -MD -MP -MF $(DEPDIR)/libcopter_la-CorrelationFunction.Tpo -c -o libcopter_la-CorrelationFunction.lo `test -f 'CorrelationFunction.cpp' || echo '$(srcdir)/'`CorrelationFunction.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-CorrelationFunction.Tpo $(DEPDIR)/libcopter_la-CorrelationFunction.Plo
#	source='CorrelationFunction.cpp' object='libcopter_la-CorrelationFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-CorrelationFunction.lo `test -f 'CorrelationFunction.cpp' || echo '$(srcdir)/'`CorrelationFunction.cpp

libcopter_la-Cosmology.lo: Cosmology.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Cosmology.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Cosmology.Tpo -c -o libcopter_la-Cosmology.lo `test -f 'Cosmology.cpp' || echo '$(srcdir)/'`Cosmology.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Cosmology.Tpo $(DEPDIR)/libcopter_la-Cosmology.Plo
#	source='Cosmology.cpp' object='libcopter_la-Cosmology.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Cosmology.lo `test -f 'Cosmology.cpp' || echo '$(srcdir)/'`Cosmology.cpp

libcopter_la-Datafile.lo: Datafile.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Datafile.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Datafile.Tpo -c -o libcopter_la-Datafile.lo `test -f 'Datafile.cpp' || echo '$(srcdir)/'`Datafile.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Datafile.Tpo $(DEPDIR)/libcopter_la-Datafile.Plo
#	source='Datafile.cpp' object='libcopter_la-Datafile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Datafile.lo `test -f 'Datafile.cpp' || echo '$(srcdir)/'`Datafile.cpp

libcopter_la-FlowingWithTime.lo: FlowingWithTime.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-FlowingWithTime.lo -MD -MP -MF $(DEPDIR)/libcopter_la-FlowingWithTime.Tpo -c -o libcopter_la-FlowingWithTime.lo `test -f 'FlowingWithTime.cpp' || echo '$(srcdir)/'`FlowingWithTime.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-FlowingWithTime.Tpo $(DEPDIR)/libcopter_la-FlowingWithTime.Plo
#	source='FlowingWithTime.cpp' object='libcopter_la-FlowingWithTime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-FlowingWithTime.lo `test -f 'FlowingWithTime.cpp' || echo '$(srcdir)/'`FlowingWithTime.cpp

libcopter_la-GrowthFunction.lo: GrowthFunction.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-GrowthFunction.lo -MD -MP -MF $(DEPDIR)/libcopter_la-GrowthFunction.Tpo -c -o libcopter_la-GrowthFunction.lo `test -f 'GrowthFunction.cpp' || echo '$(srcdir)/'`GrowthFunction.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-GrowthFunction.Tpo $(DEPDIR)/libcopter_la-GrowthFunction.Plo
#	source='GrowthFunction.cpp' object='libcopter_la-GrowthFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-GrowthFunction.lo `test -f 'GrowthFunction.cpp' || echo '$(srcdir)/'`GrowthFunction.cpp

libcopter_la-HigherSPT.lo: HigherSPT.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-HigherSPT.lo -MD -MP -MF $(DEPDIR)/libcopter_la-HigherSPT.Tpo -c -o libcopter_la-HigherSPT.lo `test -f 'HigherSPT.cpp' || echo '$(srcdir)/'`HigherSPT.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-HigherSPT.Tpo $(DEPDIR)/libcopter_la-HigherSPT.Plo
#	source='HigherSPT.cpp' object='libcopter_la-HigherSPT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-HigherSPT.lo `test -f 'HigherSPT.cpp' || echo '$(srcdir)/'`HigherSPT.cpp

libcopter_la-InterpolatedPS.lo: InterpolatedPS.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-InterpolatedPS.lo -MD -MP -MF $(DEPDIR)/libcopter_la-InterpolatedPS.Tpo -c -o libcopter_la-InterpolatedPS.lo `test -f 'InterpolatedPS.cpp' || echo '$(srcdir)/'`InterpolatedPS.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-InterpolatedPS.Tpo $(DEPDIR)/libcopter_la-InterpolatedPS.Plo
#	source='InterpolatedPS.cpp' object='libcopter_la-InterpolatedPS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-InterpolatedPS.lo `test -f 'InterpolatedPS.cpp' || echo '$(srcdir)/'`InterpolatedPS.cpp

libcopter_la-Kaiser.lo: Kaiser.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Kaiser.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Kaiser.Tpo -c -o libcopter_la-Kaiser.lo `test -f 'Kaiser.cpp' || echo '$(srcdir)/'`Kaiser.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Kaiser.Tpo $(DEPDIR)/libcopter_la-Kaiser.Plo
#	source='Kaiser.cpp' object='libcopter_la-Kaiser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Kaiser.lo `test -f 'Kaiser.cpp' || echo '$(srcdir)/'`Kaiser.cpp

libcopter_la-LagrangianResummation.lo: LagrangianResummation.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-LagrangianResummation.lo -MD -MP -MF $(DEPDIR)/libcopter_la-LagrangianResummation.Tpo -c -o libcopter_la-LagrangianResummation.lo `test -f 'LagrangianResummation.cpp' || echo '$(srcdir)/'`LagrangianResummation.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-LagrangianResummation.Tpo $(DEPDIR)/libcopter_la-LagrangianResummation.Plo
#	source='LagrangianResummation.cpp' object='libcopter_la-LagrangianResummation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-LagrangianResummation.lo `test -f 'LagrangianResummation.cpp' || echo '$(srcdir)/'`LagrangianResummation.cpp

libcopter_la-LargeN.lo: LargeN.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-LargeN.lo -MD -MP -MF $(DEPDIR)/libcopter_la-LargeN.Tpo -c -o libcopter_la-LargeN.lo `test -f 'LargeN.cpp' || echo '$(srcdir)/'`LargeN.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-LargeN.Tpo $(DEPDIR)/libcopter_la-LargeN.Plo
#	source='LargeN.cpp' object='libcopter_la-LargeN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-LargeN.lo `test -f 'LargeN.cpp' || echo '$(srcdir)/'`LargeN.cpp

libcopter_la-LinearPS.lo: LinearPS.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-LinearPS.lo -MD -MP -MF $(DEPDIR)/libcopter_la-LinearPS.Tpo -c -o libcopter_la-LinearPS.lo `test -f 'LinearPS.cpp' || echo '$(srcdir)/'`LinearPS.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-LinearPS.Tpo $(DEPDIR)/libcopter_la-LinearPS.Plo
#	source='LinearPS.cpp' object='libcopter_la-LinearPS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-LinearPS.lo `test -f 'LinearPS.cpp' || echo '$(srcdir)/'`LinearPS.cpp

libcopter_la-MonteCarlo.lo: MonteCarlo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-MonteCarlo.lo -MD -MP -MF $(DEPDIR)/libcopter_la-MonteCarlo.Tpo -c -o libcopter_la-MonteCarlo.lo `test -f 'MonteCarlo.cpp' || echo '$(srcdir)/'`MonteCarlo.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-MonteCarlo.Tpo $(DEPDIR)/libcopter_la-MonteCarlo.Plo
#	source='MonteCarlo.cpp' object='libcopter_la-MonteCarlo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-MonteCarlo.lo `test -f 'MonteCarlo.cpp' || echo '$(srcdir)/'`MonteCarlo.cpp

libcopter_la-NoWigglePS.lo: NoWigglePS.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-NoWigglePS.lo -MD -MP -MF $(DEPDIR)/libcopter_la-NoWigglePS.Tpo -c -o libcopter_la-NoWigglePS.lo `test -f 'NoWigglePS.cpp' || echo '$(srcdir)/'`NoWigglePS.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-NoWigglePS.Tpo $(DEPDIR)/libcopter_la-NoWigglePS.Plo
#	source='NoWigglePS.cpp' object='libcopter_la-NoWigglePS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-NoWigglePS.lo `test -f 'NoWigglePS.cpp' || echo '$(srcdir)/'`NoWigglePS.cpp

libcopter_la-PowerSpectrum.lo: PowerSpectrum.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-PowerSpectrum.lo -MD -MP -MF $(DEPDIR)/libcopter_la-PowerSpectrum.Tpo -c -o libcopter_la-PowerSpectrum.lo `test -f 'PowerSpectrum.cpp' || echo '$(srcdir)/'`PowerSpectrum.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-PowerSpectrum.Tpo $(DEPDIR)/libcopter_la-PowerSpectrum.Plo
#	source='PowerSpectrum.cpp' object='libcopter_la-PowerSpectrum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-PowerSpectrum.lo `test -f 'PowerSpectrum.cpp' || echo '$(srcdir)/'`PowerSpectrum.cpp

libcopter_la-Quadrature.lo: Quadrature.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Quadrature.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Quadrature.Tpo -c -o libcopter_la-Quadrature.lo `test -f 'Quadrature.cpp' || echo '$(srcdir)/'`Quadrature.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Quadrature.Tpo $(DEPDIR)/libcopter_la-Quadrature.Plo
#	source='Quadrature.cpp' object='libcopter_la-Quadrature.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Quadrature.lo `test -f 'Quadrature.cpp' || echo '$(srcdir)/'`Quadrature.cpp

libcopter_la-RPT.lo: RPT.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-RPT.lo -MD -MP -MF $(DEPDIR)/libcopter_la-RPT.Tpo -c -o libcopter_la-RPT.lo `test -f 'RPT.cpp' || echo '$(srcdir)/'`RPT.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-RPT.Tpo $(DEPDIR)/libcopter_la-RPT.Plo
#	source='RPT.cpp' object='libcopter_la-RPT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-RPT.lo `test -f 'RPT.cpp' || echo '$(srcdir)/'`RPT.cpp

libcopter_la-SPT.lo: SPT.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-SPT.lo -MD -MP -MF $(DEPDIR)/libcopter_la-SPT.Tpo -c -o libcopter_la-SPT.lo `test -f 'SPT.cpp' || echo '$(srcdir)/'`SPT.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-SPT.Tpo $(DEPDIR)/libcopter_la-SPT.Plo
#	source='SPT.cpp' object='libcopter_la-SPT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-SPT.lo `test -f 'SPT.cpp' || echo '$(srcdir)/'`SPT.cpp

libcopter_la-SimpleRG.lo: SimpleRG.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-SimpleRG.lo -MD -MP -MF $(DEPDIR)/libcopter_la-SimpleRG.Tpo -c -o libcopter_la-SimpleRG.lo `test -f 'SimpleRG.cpp' || echo '$(srcdir)/'`SimpleRG.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-SimpleRG.Tpo $(DEPDIR)/libcopter_la-SimpleRG.Plo
#	source='SimpleRG.cpp' object='libcopter_la-SimpleRG.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-SimpleRG.lo `test -f 'SimpleRG.cpp' || echo '$(srcdir)/'`SimpleRG.cpp

libcopter_la-SpecialFunctions.lo: SpecialFunctions.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-SpecialFunctions.lo -MD -MP -MF $(DEPDIR)/libcopter_la-SpecialFunctions.Tpo -c -o libcopter_la-SpecialFunctions.lo `test -f 'SpecialFunctions.cpp' || echo '$(srcdir)/'`SpecialFunctions.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-SpecialFunctions.Tpo $(DEPDIR)/libcopter_la-SpecialFunctions.Plo
#	source='SpecialFunctions.cpp' object='libcopter_la-SpecialFunctions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-SpecialFunctions.lo `test -f 'SpecialFunctions.cpp' || echo '$(srcdir)/'`SpecialFunctions.cpp

libcopter_la-Spline.lo: Spline.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Spline.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Spline.Tpo -c -o libcopter_la-Spline.lo `test -f 'Spline.cpp' || echo '$(srcdir)/'`Spline.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Spline.Tpo $(DEPDIR)/libcopter_la-Spline.Plo
#	source='Spline.cpp' object='libcopter_la-Spline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Spline.lo `test -f 'Spline.cpp' || echo '$(srcdir)/'`Spline.cpp

libcopter_la-Timer.lo: Timer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-Timer.lo -MD -MP -MF $(DEPDIR)/libcopter_la-Timer.Tpo -c -o libcopter_la-Timer.lo `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-Timer.Tpo $(DEPDIR)/libcopter_la-Timer.Plo
#	source='Timer.cpp' object='libcopter_la-Timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-Timer.lo `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp

libcopter_la-array.lo: array.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-array.lo -MD -MP -MF $(DEPDIR)/libcopter_la-array.Tpo -c -o libcopter_la-array.lo `test -f 'array.cpp' || echo '$(srcdir)/'`array.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-array.Tpo $(DEPDIR)/libcopter_la-array.Plo
#	source='array.cpp' object='libcopter_la-array.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-array.lo `test -f 'array.cpp' || echo '$(srcdir)/'`array.cpp

libcopter_la-pstring.lo: pstring.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -MT libcopter_la-pstring.lo -MD -MP -MF $(DEPDIR)/libcopter_la-pstring.Tpo -c -o libcopter_la-pstring.lo `test -f 'pstring.cpp' || echo '$(srcdir)/'`pstring.cpp
	$(am__mv) $(DEPDIR)/libcopter_la-pstring.Tpo $(DEPDIR)/libcopter_la-pstring.Plo
#	source='pstring.cpp' object='libcopter_la-pstring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcopter_la_CPPFLAGS) $(CPPFLAGS) $(libcopter_la_CXXFLAGS) $(CXXFLAGS) -c -o libcopter_la-pstring.lo `test -f 'pstring.cpp' || echo '$(srcdir)/'`pstring.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-copterincHEADERS: $(copterinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(copterincdir)" || $(MKDIR_P) "$(DESTDIR)$(copterincdir)"
	@list='$(copterinc_HEADERS)'; test -n "$(copterincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(copterincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(copterincdir)" || exit $$?; \
	done

uninstall-copterincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(copterinc_HEADERS)'; test -n "$(copterincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(copterincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(copterincdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(copterincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-copterincHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-copterincHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-copterincHEADERS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-copterincHEADERS \
	uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
